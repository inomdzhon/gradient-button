{"version":3,"sources":["canvas/utils/rnd.ts","canvas/utils/turbulence.ts","canvas/utils/randomInt.ts","canvas/constants.ts","canvas/modules/Dot/Dot.ts","canvas/utils/generateDots.ts","canvas/utils/toQuadraticCurveTo.ts","canvas/modules/CanvasBase/CanvasBase.ts","canvas/utils/getRetinaRatio.ts","canvas/modules/Vec2/Vec2.ts","canvas/modules/Mouse/Mouse.ts","canvas/modules/Circle/Circle.ts","canvas/modules/Mesh/Mesh.ts","canvas/modules/Mesh/generateSlush.ts","canvas/Slush.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["rnd","i","turbulence","x","funs","m","a","b","c","t","u","_len","arguments","length","rest","Array","_key","Math","pow","prototype","slice","call","apply","randomInt","min","max","floor","random","TWO_PI","PI","Dot","y","Object","classCallCheck","this","originalX","originalY","vx","vy","float","lastFloat","friction","spring","amount","dx1","dy1","mouse","dx","dy","minDist","radius","sqrt","angle","atan2","tx","cos","ty","sin","springBack","context","save","translate","fillStyle","beginPath","arc","closePath","fill","restore","generateDots","shape","dotsCount","RADIAN","dots","radiusX","radiusY","z","push","toQuadraticCurveTo","dotsLength","p0","p1","quadraticCurveTo","uniqueId","CanvasBase","_ref","canvasEl","width","height","centerX","centerY","rafId","lastTime","elapsedMS","TARGET_FPMS","deltaTime","speed","maxElapsedMS","id","canvas","getContext","paused","setCanvasSize","tick","bind","debounceHandleResize","debounce","handleResize","bindEvents","window","addEventListener","removeEventListener","clearRect","offsetWidth","offsetHeight","undefined","currentTime","performance","now","requestAnimationFrame","draw","cancelAnimationFrame","pause","clearCtx","unbindEvents","SCREEN_RATIO","devicePixelRatio","document","createElement","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","reduce","getRetinaRatio","Vec2","v","set","o","Mouse","anchorEl","pos","down","handleMouseMove","handleMouseOut","handleMouseUp","handleMouseDown","event","parentNode","top","left","nodeName","offsetTop","offsetLeft","offsetParent","clientX","pageXOffset","clientY","pageYOffset","preventDefault","canvasClientRect","getBoundingClientRect","Circle","color","Mesh","props","fakeRippleSize","fakeRippleBatch","rippleActivated","rippleBaseSize","rippleTweenSize","rippleSize","rippleSpeed","shapes","shapesParam","_debug","_buttonWidth","_buttonHeight","slushArray","shapesParamLength","generateSlush","backgroundColor","played","ripple","shapesLength","amplitude","j","dot","parseInt","floatMe","think","filteredBatch","fakeRipple","Slush","_this","possibleConstructorReturn","getPrototypeOf","mesh","fillRect","drawImage","strokeStyle","strokeRect","_buttonX","_buttonY","_canvasWidth","_canvasHeight","_buttonRelWidth","_buttonRelHeight","App","handleCanvasRef","node","play","react","concat","className","ref","React","Boolean","location","hostname","match","ReactDOM","render","react_default","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.138d2280.chunk.js","sourcesContent":["export default function rnd(i: number): number {\n  i += 12345678;\n  i ^= i << 2;\n  i ^= i >> 1;\n  return (i & 255) / 256;\n}\n","// utils\nimport rnd from './rnd';\n\nexport default function turbulence(x: number, ...rest: number[]): number {\n  const t = x % 1;\n  const u = 1 - t;\n\n  let funs;\n  let m;\n  let a;\n  let b;\n  let c;\n\n  if (rest.length > 1) {\n    m = Math.pow(10, rest.length);\n    funs = Array.prototype.slice.call(rest, 1);\n    funs[0] += (x | 0) * m;\n    a = turbulence.apply(null, funs);\n    funs[0] += m;\n    b = turbulence.apply(null, funs);\n    funs[0] += m;\n    c = turbulence.apply(null, funs);\n  } else {\n    a = rnd(x);\n    b = rnd(x + 1);\n    c = rnd(x + 2);\n  }\n\n  a = (a + b) * 0.5;\n  c = (b + c) * 0.5;\n\n  return (a * u + b * t) * u + (b * u + c * t) * t;\n}\n","export default function randomInt(min: number, max: number): number {\n  return Math.floor(min + Math.random() * (max + (1 - min)));\n}\n","export const TWO_PI = 2 * Math.PI;\n","// constants\nimport { TWO_PI } from '../../constants';\n\nclass Dot {\n  originalX: number;\n  originalY: number;\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  float: number;\n  lastFloat: number;\n  friction: number;\n  spring: number;\n\n  constructor(x: number, y: number) {\n    this.originalX = x;\n    this.originalY = y;\n    this.x = x;\n    this.y = y;\n    this.vx = 0;\n    this.vy = 0;\n    this.float = 0;\n    this.lastFloat = 0;\n    this.friction = 0.5;\n    this.spring = 0.01;\n  }\n\n  floatMe(amount: number): void {\n    if (this.float < 0.1) {\n      this.float = amount;\n      this.lastFloat = amount;\n    }\n  }\n\n  springBack(): void {\n    let dx1 = this.originalX - this.x;\n    let dy1 = this.originalY - this.y;\n\n    dx1 *= this.spring;\n    dy1 *= this.spring;\n\n    this.vx += dx1;\n    this.vy += dy1;\n  }\n\n  think(mouse: { x: number; y: number; radius: number }): void {\n    const dx = this.x - mouse.x;\n    const dy = this.y - mouse.y;\n\n    const minDist = mouse.radius;\n    const dist = Math.sqrt(dx * dx + dy * dy);\n\n    if (dist < minDist) {\n      this.float = 0;\n\n      const angle = Math.atan2(dy, dx);\n      const tx = mouse.x + Math.cos(angle) * minDist;\n      const ty = mouse.y + Math.sin(angle) * minDist;\n\n      this.vx += (tx - this.x) * 0.5;\n      this.vy += (ty - this.y) * 0.5;\n    }\n\n    // begin spring\n    this.springBack();\n\n    // friction\n    this.vx *= this.friction;\n    this.vy *= this.friction;\n\n    // set ball position based on velocity\n    this.x += this.vx;\n    this.y += this.vy;\n\n    if (this.float > 0) {\n      this.x = this.originalX + this.lastFloat * Math.sin((TWO_PI * this.float) / this.lastFloat);\n      this.float = this.float - 0.1;\n    }\n  }\n\n  draw(context: CanvasRenderingContext2D) {\n    context.save();\n    context.translate(this.x, this.y);\n    context.fillStyle = 'black';\n    context.beginPath();\n    //x, y, radius, start_angle, end_angle, anti-clockwise\n    context.arc(0, 0, 4, 0, TWO_PI, true);\n    context.closePath();\n    context.fill();\n    context.restore();\n  }\n\n  drawAnchor(context) {\n    context.save();\n    context.translate(this.originalX, this.originalY);\n    context.fillStyle = 'tomato';\n    context.beginPath();\n    //x, y, radius, start_angle, end_angle, anti-clockwise\n    context.arc(0, 0, 4, 0, TWO_PI, true);\n    context.closePath();\n    context.fill();\n    context.restore();\n  }\n}\n\nexport default Dot;\n","// constants\nimport { TWO_PI } from '../constants';\n\n// modules\nimport Dot from '../modules/Dot/Dot';\n\n// utils\nimport turbulence from './turbulence';\nimport randomInt from './randomInt';\nimport rnd from './rnd';\n\ntype ShapeType = {\n  x: number;\n  y: number;\n  radiusX: number;\n  radiusY: number;\n};\n\nexport default function generateDots(shape: ShapeType, dotsCount: number): Dot[] {\n  const RADIAN = TWO_PI / dotsCount;\n  const dots: Dot[] = [];\n\n  for (let i = 0; i < dotsCount; i += 1) {\n    const cos = Math.cos(i * RADIAN);\n    const sin = Math.sin(i * RADIAN);\n    let x = shape.x + shape.radiusX * cos;\n    let y = shape.y + shape.radiusY * sin;\n    const z = turbulence(x * 0.02, y * 0.5) * randomInt(0, 10) + rnd(x * 10 + y * 100) * randomInt(500, 1000);\n\n    x = x + cos * z * (shape.radiusX * 0.0006);\n    y = y + sin * z * (shape.radiusY * 0.0006);\n\n    dots.push(new Dot(x, y));\n  }\n\n  return dots;\n}\n","type DotType = {\n  x: number;\n  y: number;\n};\n\nexport default function toQuadraticCurveTo(\n  context: CanvasRenderingContext2D,\n  dots: DotType[],\n  fillStyle: string,\n): void {\n  context.beginPath();\n  for (let i = 0, dotsLength = dots.length; i <= dotsLength; i += 1) {\n    const p0 = dots[i + 0 >= dotsLength ? i + 0 - dotsLength : i + 0];\n    const p1 = dots[i + 1 >= dotsLength ? i + 1 - dotsLength : i + 1];\n    context.quadraticCurveTo(p0.x, p0.y, (p0.x + p1.x) * 0.5, (p0.y + p1.y) * 0.5);\n  }\n  context.closePath();\n  context.fillStyle = fillStyle;\n  context.fill();\n}\n","// utils\nimport { debounce } from 'lodash';\nimport { getRetinaRatio } from '../../utils';\n\nexport type PropsType = {\n  canvasEl: HTMLCanvasElement;\n};\n\nlet uniqueId = 0;\n\nexport default class CanvasBase {\n  static TARGET_FPMS: number = 0.06;\n  static SCREEN_RATIO: number = getRetinaRatio();\n\n  id: number;\n  canvas: HTMLCanvasElement;\n  context: CanvasRenderingContext2D;\n  width: number = 0;\n  height: number = 0;\n  centerX: number = 0;\n  centerY: number = 0;\n\n  paused: boolean;\n  rafId: number = -1;\n  lastTime: number = -1;\n  elapsedMS: number = 1 / CanvasBase.TARGET_FPMS;\n  deltaTime: number = 1;\n  speed: number = 1;\n  maxElapsedMS: number = 100;\n\n  constructor({ canvasEl }: PropsType) {\n    this.id = uniqueId;\n    uniqueId += 1;\n\n    this.canvas = canvasEl;\n    this.context = canvasEl.getContext('2d') as CanvasRenderingContext2D;\n    this.paused = true;\n\n    this.setCanvasSize();\n\n    this.tick = this.tick.bind(this);\n    this.debounceHandleResize = debounce(this.handleResize.bind(this));\n    this.bindEvents();\n  }\n\n  bindEvents(): void {\n    window.addEventListener('resize', this.debounceHandleResize);\n  }\n\n  unbindEvents(): void {\n    window.removeEventListener('resize', this.debounceHandleResize);\n  }\n\n  clearCtx(): void {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  handleResize(): void {\n    this.setCanvasSize();\n  }\n\n  debounceHandleResize(): void {}\n\n  setCanvasSize(): void {\n    this.width = this.canvas.offsetWidth;\n    this.height = this.canvas.offsetHeight;\n    this.centerX = this.canvas.offsetWidth / 2;\n    this.centerY = this.canvas.offsetHeight / 2;\n\n    // const scaledWidth = this.width * CanvasBase.SCREEN_RATIO;\n    // const scaledHeight = this.height * CanvasBase.SCREEN_RATIO;\n    //\n    // this.canvas.width = scaledWidth;\n    // this.canvas.height = scaledHeight;\n    //\n    // this.context.scale(CanvasBase.SCREEN_RATIO, CanvasBase.SCREEN_RATIO);\n  }\n\n  draw(_deltaTime: number = 1): void {}\n\n  tick(currentTime = performance.now()): void {\n    if (this.paused) {\n      return;\n    }\n\n    this.rafId = -1;\n\n    let elapsedMS;\n\n    if (currentTime > this.lastTime) {\n      // Save uncapped elapsedMS for measurement\n      elapsedMS = this.elapsedMS = currentTime - this.lastTime;\n      // cap the milliseconds elapsed used for deltaTime\n      if (elapsedMS > this.maxElapsedMS) {\n        elapsedMS = this.maxElapsedMS;\n      }\n      this.deltaTime = elapsedMS * CanvasBase.TARGET_FPMS * this.speed;\n    } else {\n      this.deltaTime = this.elapsedMS = 0;\n    }\n\n    this.lastTime = currentTime;\n\n    this.rafId = window.requestAnimationFrame(this.tick);\n\n    this.draw(this.deltaTime);\n  }\n\n  play(): void {\n    if (this.paused) {\n      this.paused = false;\n      this.tick();\n      // this.draw();\n    }\n  }\n\n  pause(): void {\n    this.paused = true;\n    window.cancelAnimationFrame(this.rafId);\n  }\n\n  destroy(): void {\n    this.pause();\n    this.clearCtx();\n    this.unbindEvents();\n  }\n}\n","export default function getRetinaRatio(): number {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const c = <CanvasRenderingContext2D>document.createElement('canvas').getContext('2d');\n  const backingStoreRatio = [\n    // @ts-ignore\n    c.webkitBackingStorePixelRatio,\n    // @ts-ignore\n    c.mozBackingStorePixelRatio,\n    // @ts-ignore\n    c.msBackingStorePixelRatio,\n    // @ts-ignore\n    c.oBackingStorePixelRatio,\n    // @ts-ignore\n    c.backingStorePixelRatio,\n    1,\n  ].reduce((a, b) => a || b);\n  return devicePixelRatio / backingStoreRatio;\n}\n","type VecType = {\n  x: number;\n  y: number;\n};\n\nclass Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(x: number, y: number): Vec2 {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  copy(v: VecType): Vec2 {\n    return this.set(v.x, v.y);\n  }\n\n  translate(x: number, y: number): Vec2 {\n    return this.set(this.x + x, this.y + y);\n  }\n\n  scale(v: number): Vec2 {\n    return this.set(this.x * v, this.y * v);\n  }\n\n  distance(o: VecType): number {\n    const dx = this.x - o.x;\n    const dy = this.y - o.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n}\n\nexport default Vec2;\n","import Vec2 from '../Vec2/Vec2';\n\nclass Mouse {\n  anchorEl: HTMLElement;\n  pos: Vec2 = new Vec2(9999, 9999);\n  down: boolean = false;\n\n  constructor(anchorEl: HTMLElement) {\n    this.anchorEl = anchorEl;\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n\n    this.bindEvents();\n  }\n\n  bindEvents(): void {\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseout', this.handleMouseOut);\n    this.anchorEl.addEventListener('mouseup', this.handleMouseUp);\n    this.anchorEl.addEventListener('mousedown', this.handleMouseDown);\n  }\n\n  unbindEvents(): void {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    this.anchorEl.removeEventListener('mouseup', this.handleMouseUp);\n    this.anchorEl.removeEventListener('mousedown', this.handleMouseDown);\n  }\n\n  destroy(): void {\n    if (this.anchorEl) {\n      this.unbindEvents();\n    }\n  }\n\n  handleMouseMove(event: MouseEvent): void {\n    // get canvas position\n    let parentNode: any = this.anchorEl;\n    let top = 0;\n    let left = 0;\n\n    while (parentNode.nodeName !== 'BODY') {\n      top += parentNode.offsetTop;\n      left += parentNode.offsetLeft;\n      parentNode = parentNode.offsetParent;\n    }\n\n    // return relative mouse position\n    this.pos.set(event.clientX - left + window.pageXOffset, event.clientY - top + window.pageYOffset);\n    return event.preventDefault();\n  }\n\n  handleMouseOut(event: MouseEvent): void {\n    this.down = false;\n    this.pos.set(9999, 9999);\n    return event.preventDefault();\n  }\n\n  handleMouseUp(event: MouseEvent): void {\n    this.down = false;\n    return event.preventDefault();\n  }\n\n  handleMouseDown(event: MouseEvent): void {\n    this.down = true;\n    const canvasClientRect = this.anchorEl.getBoundingClientRect();\n    this.pos.set(event.clientX - canvasClientRect.left, event.clientY - canvasClientRect.top);\n    return event.preventDefault();\n  }\n}\n\nexport default Mouse;\n","// utils\nimport { TWO_PI } from '../../constants';\n\nclass Circle {\n  x: number;\n  y: number;\n  radius: number;\n  color: string;\n\n  constructor(x: number, y: number, radius: number, color: string) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = color;\n  }\n\n  draw(context: CanvasRenderingContext2D): void {\n    context.beginPath();\n    context.arc(this.x, this.y, this.radius, 0, TWO_PI, false);\n    context.closePath();\n    context.fillStyle = this.color;\n    context.fill();\n  }\n}\n\nexport default Circle;\n","// modules\nimport Dot from '../Dot/Dot';\nimport Circle from '../Circle/Circle';\n\n// core utils\nimport { toQuadraticCurveTo, invertCoordinateToAngle } from '../../utils/index';\n\n// modules\nimport Mouse from '../Mouse/Mouse';\n\n// utils\nimport generateSlush, { SlushType } from './generateSlush';\n\nimport { TWO_PI } from '../../constants';\n\ntype PropsType = {\n  width: number;\n  height: number;\n  backgroundColor: string;\n  mouse: Mouse;\n};\n\nclass Mesh {\n  canvas: HTMLCanvasElement;\n  context: CanvasRenderingContext2D;\n  shapes: SlushType[];\n  mouse: Mouse;\n\n  width: number;\n  height: number;\n  centerX: number;\n  centerY: number;\n  backgroundColor: string;\n\n  fakeRippleSize: number = 100;\n  fakeRippleBatch: { played: boolean; ripple: Circle }[] = [];\n\n  rippleActivated: boolean = false;\n  rippleBaseSize: number = 70;\n  rippleTweenSize: number = 70;\n  rippleSize: number = 150;\n  rippleSpeed: number = 27;\n\n  constructor(props: PropsType) {\n    this.width = props.width;\n    this.height = props.height;\n    this.centerX = props.width / 2;\n    this.centerY = props.height / 2;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = props.width;\n    this.canvas.height = props.height;\n    this.context = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    this.shapes = generateSlush(\n      [{ color: '#43ece1' }, { color: '#b5ffc3' }, { color: '#f39bf2' }],\n      this.width,\n      this.height,\n      this.centerX,\n      this.centerY,\n    );\n    this.backgroundColor = props.backgroundColor;\n    this.mouse = props.mouse;\n  }\n\n  setSize(width: number, height: number): void {\n    this.width = width;\n    this.height = height;\n    this.centerX = width / 2;\n    this.centerY = height / 2;\n  }\n\n  draw(deltaTime: number = 1): void {\n    // reset canvas\n    this.context.clearRect(0, 0, this.width, this.height);\n\n    if (this.mouse.down) {\n      if (!this.rippleActivated) {\n        this.rippleActivated = true;\n      }\n\n      if (!this.fakeRippleBatch.length) {\n        this.fakeRippleBatch.push({\n          played: false,\n          ripple: new Circle(this.mouse.pos.x, this.mouse.pos.y, 0, this.backgroundColor),\n        });\n      } else {\n        if (this.fakeRippleBatch[0].played) {\n          this.fakeRippleBatch[0].played = false;\n        }\n\n        this.fakeRippleBatch[0].ripple.x = this.mouse.pos.x;\n        this.fakeRippleBatch[0].ripple.y = this.mouse.pos.y;\n      }\n    }\n\n    if (this.rippleActivated) {\n      if (this.rippleTweenSize < this.rippleSize) {\n        this.rippleTweenSize += deltaTime + this.rippleSpeed;\n      } else if (this.rippleTweenSize >= this.rippleSize) {\n        this.rippleActivated = false;\n      }\n    } else if (this.rippleTweenSize > this.rippleBaseSize) {\n      this.rippleTweenSize -= deltaTime + this.rippleSpeed;\n\n      if (this.rippleTweenSize < this.rippleBaseSize) {\n        this.rippleTweenSize = this.rippleBaseSize;\n      }\n    }\n\n    for (let i = 0, shapesLength = this.shapes.length; i < shapesLength; i += 1) {\n      const shape = this.shapes[i];\n      const amplitude = shape.float;\n\n      for (let j = 0, dotsLength = shape.dots.length; j < dotsLength; j += 1) {\n        const dot = shape.dots[j];\n\n        // @ts-ignore [reason] Argument of type 'number' is not assignable to parameter of type 'string'.\n        if (parseInt(dot.x) === parseInt(dot.originalX) && parseInt(dot.y) === parseInt(dot.originalY)) {\n          dot.floatMe(amplitude + (amplitude / 3) * Math.random());\n        }\n\n        dot.think({\n          x: this.mouse.pos.x,\n          y: this.mouse.pos.y,\n          radius: this.rippleTweenSize,\n        });\n      }\n\n      toQuadraticCurveTo(this.context, shape.dots, shape.color);\n    }\n\n    if (this.fakeRippleBatch.length) {\n      const filteredBatch: { played: boolean; ripple: Circle }[] = [];\n\n      for (let i = 0, j = this.fakeRippleBatch.length; i < j; i += 1) {\n        const fakeRipple = this.fakeRippleBatch[i];\n\n        if (!fakeRipple.played) {\n          if (fakeRipple.ripple.radius < this.fakeRippleSize) {\n            fakeRipple.ripple.radius += deltaTime + 12;\n          } else {\n            fakeRipple.played = true;\n          }\n\n          filteredBatch.push(fakeRipple);\n          fakeRipple.ripple.draw(this.context);\n        } else if (fakeRipple.played && fakeRipple.ripple.radius > 0) {\n          fakeRipple.ripple.radius -= deltaTime + 2;\n\n          if (fakeRipple.ripple.radius > 0) {\n            filteredBatch.push(fakeRipple);\n            fakeRipple.ripple.draw(this.context);\n          }\n        }\n      }\n\n      this.fakeRippleBatch = filteredBatch;\n    }\n  }\n}\n\nexport default Mesh;\n","// constants\nimport { TWO_PI } from '../../constants';\n\n// modules\nimport Dot from '../Dot/Dot';\n\n// utils\nimport { randomInt, generateDots } from '../../utils/index';\n\nexport type SlushType = {\n  color: string;\n  float: number;\n  dots: Dot[];\n};\n\ntype ShapesParamType = {\n  color: string;\n};\n\nexport default function generateSlush(\n  shapesParam: ShapesParamType[],\n  width: number,\n  height: number,\n  centerX: number,\n  centerY: number,\n) {\n  if (window._debug) {\n    width = window._buttonWidth;\n    height = window._buttonHeight;\n  }\n\n  const RADIAN = TWO_PI / shapesParam.length;\n\n  const dotsCount = Math.max(width, height) * 0.09;\n\n  const slushArray: SlushType[] = [];\n\n  for (let i = 0, shapesParamLength = shapesParam.length; i < shapesParamLength; i += 1) {\n    const shape = shapesParam[i];\n\n    const radiusX = width * (shapesParam.length / 10);\n    const radiusY = height * (shapesParam.length / 10);\n    const cos = Math.cos(i * RADIAN);\n    const sin = Math.sin(i * RADIAN);\n    const x = radiusX * cos + centerX;\n    const y = radiusY * sin + centerY;\n\n    slushArray.push({\n      color: shape.color,\n      float: 5,\n      dots: generateDots(\n        {\n          x,\n          y,\n          radiusX: radiusX,\n          radiusY: radiusY,\n        },\n        dotsCount,\n      ),\n    });\n  }\n\n  return slushArray;\n}\n","// modules\nimport CanvasBase from './modules/CanvasBase/CanvasBase';\nimport Mouse from './modules/Mouse/Mouse';\nimport Mesh from './modules/Mesh/Mesh';\n\nclass Slush extends CanvasBase {\n  mouse: Mouse;\n  mesh: Mesh;\n\n  constructor(canvas: any) {\n    super(canvas);\n\n    this.mouse = new Mouse(this.canvas);\n    this.mesh = new Mesh({\n      width: this.canvas.width,\n      height: this.canvas.height,\n      mouse: this.mouse,\n      backgroundColor: '#47F6FF',\n    });\n  }\n\n  draw(deltaTime: number = 0): void {\n    this.context.fillStyle = '#47F6FF';\n    this.context.fillRect(0, 0, this.width, this.height);\n\n    this.mesh.draw(deltaTime);\n\n    if (window._debug) {\n      this.context.drawImage(this.mesh.canvas, this.centerX - this.mesh.centerX, this.centerY - this.mesh.centerY);\n    } else {\n      this.context.drawImage(this.mesh.canvas, 0, 0);\n    }\n\n    if (window._debug) {\n      this.context.strokeStyle = '#00000';\n      this.context.strokeRect(window._buttonX, window._buttonY, window._buttonWidth, window._buttonHeight);\n    }\n  }\n}\n\nexport default Slush;\n","import * as React from 'react';\n\nimport Slush from './canvas/Slush';\n\nimport './App.css';\n\nwindow._debug = false;\n\nwindow._canvasWidth = 700;\nwindow._canvasHeight = 700;\n\nwindow._buttonWidth = 400;\nwindow._buttonHeight = 80;\n\nwindow._buttonX = window._canvasWidth / 2 - window._buttonWidth / 2;\nwindow._buttonY = window._canvasHeight / 2 - window._buttonHeight / 2;\n\nwindow._buttonRelWidth = window._buttonX + window._buttonWidth;\nwindow._buttonRelHeight = window._buttonY + window._buttonHeight;\n\nclass App extends React.Component {\n  canvasEl: HTMLCanvasElement | null = null;\n\n  componentDidMount(): void {\n    if (this.canvasEl) {\n      const instance = new Slush({\n        canvasEl: this.canvasEl,\n      });\n      instance.play();\n    }\n  }\n\n  handleCanvasRef = (node: HTMLCanvasElement | null): void => {\n    this.canvasEl = node;\n  };\n\n  render(): React.ReactFragment {\n    const width = window._debug ? window._canvasWidth : window._buttonWidth;\n    const height = window._debug ? window._canvasHeight : window._buttonHeight;\n\n    return (\n      <React.Fragment>\n        <style>{`\n          body {\n            background: #0d111a;\n          }\n\n          .button {\n            position: absolute;\n            top: 50px;\n            left: 50px;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            font-weight: bold;\n            width: ${width}px;\n            height: ${height}px;\n            overflow: hidden;\n            border-radius: 4px;\n            background: #47f6ff;\n          }\n\n          .button__overlay {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            filter: ${window._debug ? 'none' : 'blur(15px)'};\n            transform: translateZ(0px);\n          }\n\n          .button__text {\n            position: relative;\n            z-index: 5;\n            pointer-events: none;\n          }\n        `}</style>\n        <div className=\"button\">\n          <canvas ref={this.handleCanvasRef} className=\"button__overlay\" width={width} height={height} />\n          <span className=\"button__text\">Играть</span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}